{"version":3,"sources":["components/common/FormsControl/FormsControl.module.css","components/common/FormsControl/FormsControl.js","utils/validators/validators.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx"],"names":["module","exports","formControl","error","formSummaryError","Element","_ref","input","_ref$meta","meta","touched","props","Object","D_Projects_React_react_sotial_network_sotial_network_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_0__","_excluded","hasError","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","className","styles","_Element","assign","createField","placeholder","name","validate","component","arguments","length","undefined","text","redux_form__WEBPACK_IMPORTED_MODULE_2__","__webpack_require__","d","__webpack_exports__","required","maxLengthCreator","value","maxLength","concat","descriptionBlock","postsBlock","posts","item","ProfileStatusWithHooks","_useState","useState","_useState2","slicedToArray","editMode","setEditMode","_useState3","status","_useState4","setStatus","useEffect","react_default","onDoubleClick","onChange","e","currentTarget","autoFocus","onBlur","updateStatus","ProfileInfo","profile","s","src","photos","large","alt","ProfileInfo_ProfileStatusWithHooks","Preloader","Post","message","likesCount","MyPosts","React","memo","console","log","postsElements","toConsumableArray","reverse","map","p","MyPosts_Post_Post","AddNewPostFormRedux","onSubmit","values","addPost","newPostText","maxLength10","Textarea","reduxForm","form","handleSubmit","Field","MyPostsContainer","connect","state","profilePage","dispatch","addPostActionCreator","Profile","Profile_ProfileInfo_ProfileInfo","MyPosts_MyPostsContainer","ProfileContainer","userId","this","match","params","authorizedUserId","history","push","getUserProfile","getStatus","components_Profile_Profile","Component","compose","auth","isAuth","withRouter"],"mappings":"6EACAA,EAAAC,QAAA,CAAkBC,YAAA,kCAAAC,MAAA,4BAAAC,iBAAA,oNCGLC,EAAU,SAAAA,GAAO,OAAI,SAAAC,GAAmD,IAAhDC,EAAgDD,EAAhDC,MAAgDC,EAAAF,EAAzCG,KAAQC,EAAiCF,EAAjCE,QAASP,EAAwBK,EAAxBL,MAAYQ,EAAYC,OAAAC,EAAA,EAAAD,CAAAN,EAAAQ,GAC3EC,EAAWL,GAAWP,EAC5B,OACIa,EAAAC,EAAAC,cAAA,OAAKC,UAAWC,IAAOlB,YAAc,KAAOa,EAAWK,IAAOjB,MAAQ,KAClEa,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACG,EAADT,OAAAU,OAAA,GAAaf,EAAWI,KAE3BI,GAAYC,EAAAC,EAAAC,cAAA,YAAOf,MAKnBoB,EAAc,SAACC,EAAaC,EAAMC,EAAUC,GAA9B,IAAyChB,EAAzCiB,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAiD,GAAIG,EAArDH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAA4D,GAA5D,OACvBZ,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAACc,EAAA,EAADpB,OAAAU,OAAA,CAAOE,YAAaA,EAAaC,KAAMA,EAAME,UAAWA,EACpDD,SAAUA,GACNf,EACAoB,wCCrBhBE,EAAAC,EAAAC,EAAA,sBAAAC,IAAAH,EAAAC,EAAAC,EAAA,sBAAAE,IAAO,IAAMD,EAAW,SAAAE,GACpB,OAAIA,OACA,EACU,qBAGLD,EAAmB,SAACE,GAAD,OAAe,SAACD,GAC5C,OAAIA,EAAMT,OAASU,EACf,iBAAAC,OAAwBD,EAAxB,iBACG,yBCRXvC,EAAAC,QAAA,CAAkBwC,iBAAA,4DCAlBzC,EAAAC,QAAA,CAAkByC,WAAA,4BAAAC,MAAA,6CCAlB3C,EAAAC,QAAA,CAAkB2C,KAAA,mJCqCHC,EAlCgB,SAAClC,GAE5B,IAAAmC,EAA8BC,oBAAS,GAAvCC,EAAApC,OAAAqC,EAAA,EAAArC,CAAAkC,EAAA,GAAKI,EAALF,EAAA,GAAeG,EAAfH,EAAA,GACAI,EAA0BL,mBAASpC,EAAM0C,QAAzCC,EAAA1C,OAAAqC,EAAA,EAAArC,CAAAwC,EAAA,GAAKC,EAALC,EAAA,GAAaC,EAAbD,EAAA,GACAE,oBAAU,WACND,EAAU5C,EAAM0C,SACjB,CAAC1C,EAAM0C,SAYV,OACII,EAAAxC,EAAAC,cAAA,YACMgC,GACEO,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAAA,QAAMwC,cAdG,WACrBP,GAAY,KAayCxC,EAAM0C,QAAU,cAGhEH,GACGO,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAAA,SAAOyC,SAZA,SAACC,GACpBL,EAAUK,EAAEC,cAAcvB,QAWmBwB,WAAW,EAAMC,OAhBvC,WACvBZ,GAAY,GACZxC,EAAMqD,aAAaX,IAcuEf,MAAOe,OCV1FY,EAhBK,SAAA3D,GAAuC,IAApC4D,EAAoC5D,EAApC4D,QAASF,EAA2B1D,EAA3B0D,aAAcX,EAAa/C,EAAb+C,OAC1C,OAAKa,EAKDT,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAAA,OAAKC,UAAWgD,IAAE1B,kBACdgB,EAAAxC,EAAAC,cAAA,OAAKkD,IAAKF,EAAQG,OAAOC,MAAOC,IAAI,KACpCd,EAAAxC,EAAAC,cAAA,WACAuC,EAAAxC,EAAAC,cAACsD,EAAD,CAAwBnB,OAAQA,EAAQW,aAAcA,MARvDP,EAAAxC,EAAAC,cAACuD,EAAA,EAAD,uGCQAC,EAZF,SAAC/D,GACZ,OACE8C,EAAAxC,EAAAC,cAAA,OAAKC,UAAWgD,IAAEvB,MAChBa,EAAAxC,EAAAC,cAAA,OAAKkD,IAAI,4FACLzD,EAAMgE,QACNlB,EAAAxC,EAAAC,cAAA,WACFuC,EAAAxC,EAAAC,cAAA,oBADE,IACkBP,EAAMiE,cCA5BC,EAAUC,IAAMC,KAAK,SAACpE,GAGxBqE,QAAQC,IAAI,GAEZ,IAAIC,EACAtE,OAAAuE,EAAA,EAAAvE,CAAID,EAAMgC,OACLyC,UACAC,IAAI,SAAAC,GAAC,OAAI7B,EAAAxC,EAAAC,cAACqE,EAAD,CAAMZ,QAASW,EAAEX,QAASC,WAAYU,EAAEV,eAO1D,OACInB,EAAAxC,EAAAC,cAAA,OAAKC,UAAWgD,IAAEzB,YACde,EAAAxC,EAAAC,cAAA,sBACAuC,EAAAxC,EAAAC,cAACsE,EAAD,CAAqBC,SAPb,SAACC,GACb/E,EAAMgF,QAAQD,EAAOE,gBAOjBnC,EAAAxC,EAAAC,cAAA,OAAKC,UAAWgD,IAAExB,OACbuC,MAOXW,EAAcxD,YAAiB,IAE/ByD,EAAWzF,YAAQ,YAenBmF,EAAsBO,YAAU,CAAEC,KAAM,yBAAlBD,CAdP,SAACpF,GAClB,OACI8C,EAAAxC,EAAAC,cAAA,QAAMuE,SAAU9E,EAAMsF,cAClBxC,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAACgF,EAAA,EAAD,CAAOzE,KAAM,cAAeE,UAAWmE,EAAUtE,YAAa,eAC1DE,SAAU,CAACU,IAAUyD,MAE7BpC,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAAA,8BAQD2D,IC9BAsB,EAFUC,YAhBD,SAACC,GACrB,MAAO,CACH1D,MAAO0D,EAAMC,YAAY3D,MACzBiD,YAAaS,EAAMC,YAAYV,cAIZ,SAACW,GACxB,MAAO,CAEHZ,QAAS,SAACC,GACNW,EAASC,YAAqBZ,OAKjBQ,CAA6CvB,GCRvD4B,EAXC,SAAC9F,GAEb,OACI8C,EAAAxC,EAAAC,cAAA,WACIuC,EAAAxC,EAAAC,cAACwF,EAAD,CAAaxC,QAASvD,EAAMuD,QAASb,OAAQ1C,EAAM0C,OAAQW,aAAcrD,EAAMqD,eAC/EP,EAAAxC,EAAAC,cAACyF,EAAD,yBCFNC,yKACF,WACI,IAAIC,EAASC,KAAKnG,MAAMoG,MAAMC,OAAOH,OAChCA,IAEDA,EAASC,KAAKnG,MAAMsG,mBAEhBH,KAAKnG,MAAMuG,QAAQC,KAAK,UAGhCL,KAAKnG,MAAMyG,eAAeP,GAC1BC,KAAKnG,MAAM0G,UAAUR,yBAGzB,WACI,OACIpD,EAAAxC,EAAAC,cAACoG,EAAD1G,OAAAU,OAAA,GAAawF,KAAKnG,MAAlB,CAAyBuD,QAAS4C,KAAKnG,MAAMuD,QAASb,OAAQyD,KAAKnG,MAAM0C,OACrEW,aAAc8C,KAAKnG,MAAMqD,uBAjBVc,IAAMyC,WA4BtBC,sBACXpB,YARkB,SAACC,GAAD,MAAY,CAC9BnC,QAASmC,EAAMC,YAAYpC,QAC3Bb,OAAQgD,EAAMC,YAAYjD,OAC1B4D,iBAAkBZ,EAAMoB,KAAKZ,OAC7Ba,OAAQrB,EAAMoB,KAAKC,SAIM,CAAEN,mBAAgBC,cAAWrD,mBACtD2D,IAFWH,CAIbZ","file":"static/js/4.6b510ea8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControl_formControl__2Nffd\",\"error\":\"FormsControl_error__NieoK\",\"formSummaryError\":\"FormsControl_formSummaryError__2LHCK\"};","import React from \"react\"\r\nimport { Field } from \"redux-form\";\r\nimport styles from \"./FormsControl.module.css\"\r\n\r\nexport const Element = Element => ({ input, meta: { touched, error }, ...props }) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + ' ' + (hasError ? styles.error : '')}>\r\n            <div>\r\n                <Element {...input} {...props} />\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const createField = (placeholder, name, validate, component, props = {}, text = '') => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name} component={component}\r\n            validate={validate}\r\n            {...props}\r\n            {...text} />\r\n    </div>\r\n\r\n)","export const required = value => {\r\n    if (value) {\r\n        return undefined\r\n    } else return 'Field is required'\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) {\r\n        return `Max length is ${maxLength} symbols`\r\n    } else return undefined\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"descriptionBlock\":\"ProfileInfo_descriptionBlock__2cDqu\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__3yvQy\",\"posts\":\"MyPosts_posts__2ke44\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__26-Ur\"};","import React, { useEffect, useState } from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false)\r\n    let [status, setStatus] = useState(props.status)\r\n    useEffect(()=>{\r\n        setStatus(props.status)\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false)\r\n        props.updateStatus(status)\r\n    }\r\n    const onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value)\r\n    }\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n                <div>\r\n                    <span onDoubleClick={activateEditMode} >{props.status || 'No status'}</span>\r\n                </div >\r\n            }\r\n            {editMode &&\r\n                <div>\r\n                    <input onChange={onStatusChange} autoFocus={true} onBlur={deactivateEditMode} value={status} />\r\n                </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport Preloader from '../../common/preloader/Preloader';\r\nimport s from './ProfileInfo.module.css';\r\nimport ProfileStatusWithHooks from './ProfileStatusWithHooks';\r\n\r\nconst ProfileInfo = ({ profile, updateStatus, status }) => {\r\n    if (!profile) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div className={s.descriptionBlock}>\r\n                <img src={profile.photos.large} alt=\"\" />\r\n                <br />\r\n                <ProfileStatusWithHooks status={status} updateStatus={updateStatus} />\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;","import React from 'react';\r\nimport s from './Post.module.css';\r\n\r\nconst Post = (props) => {\r\n  return (\r\n    <div className={s.item}>\r\n      <img src='https://movies4maniacs.liberty.me/wp-content/uploads/sites/1218/2015/09/avatarsucks.jpg' />\r\n        { props.message }\r\n          <div>\r\n        <span>like</span> { props.likesCount }\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validators';\r\nimport { Element } from '../../common/FormsControl/FormsControl';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\n\r\n\r\n\r\nconst MyPosts = React.memo((props) => {\r\n\r\n\r\n    console.log(1)\r\n\r\n    let postsElements =\r\n        [...props.posts]\r\n            .reverse()\r\n            .map(p => <Post message={p.message} likesCount={p.likesCount} />)\r\n\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostFormRedux onSubmit={onAddPost} />\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n})\r\n\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\n\r\nconst Textarea = Element('textarea')\r\nlet AddNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit} >\r\n            <div>\r\n                <Field name={'newPostText'} component={Textarea} placeholder={'Post message'}\r\n                    validate={[required, maxLength10]} />\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostFormRedux = reduxForm({ form: 'ProfileAddNewPostForm' })(AddNewPostForm)\r\n\r\nexport default MyPosts;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPostActionCreator, updateNewPostTextActionCreator } from \"../../../redux/profile-reducer\";\r\nimport MyPosts from './MyPosts';\r\n\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText\r\n\r\n    }\r\n}\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n      \r\n        addPost: (newPostText) => { \r\n            dispatch(addPostActionCreator(newPostText));\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts)\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\n\r\nconst Profile = (props) => {\r\n\r\n    return (\r\n        <div>\r\n            <ProfileInfo profile={props.profile} status={props.status} updateStatus={props.updateStatus} />\r\n            <MyPostsContainer />\r\n            {/* <MyPostsContainer store={props.store} /> */}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from './Profile';\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, getStatus, updateStatus } from '../../redux/profile-reducer';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { compose } from 'redux';\r\n\r\nclass ProfileContainer extends React.Component {\r\n    componentDidMount() {\r\n        let userId = this.props.match.params.userId\r\n        if (!userId) {\r\n\r\n            userId = this.props.authorizedUserId\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile} status={this.props.status}\r\n                updateStatus={this.props.updateStatus} />\r\n        )\r\n    }\r\n}\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, { getUserProfile, getStatus, updateStatus }),\r\n    withRouter,\r\n    // withAuthRedirect\r\n)(ProfileContainer)"],"sourceRoot":""}